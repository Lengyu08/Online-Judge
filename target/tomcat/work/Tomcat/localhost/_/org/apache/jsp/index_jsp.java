/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2023-12-08 12:34:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import Login_And_Register.CheckLogin;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header.jsp", Long.valueOf(1702036038688L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

  request.setCharacterEncoding("utf-8");
  response.setCharacterEncoding("utf-8");

  String loggedInUsername = (String) session.getAttribute("loggedInUsername");
  // å¦æéè¦ç»åºï¼ä» Session ä¸­å é¤ç¨æ·å
  String logout = request.getParameter("logout");
  if ("true".equals(logout)) {
    new CheckLogin().logoutUser(loggedInUsername);
    session.removeAttribute("loggedInUsername");
    response.sendRedirect("/home.jsp");
  }

      out.write('\r');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<!-- https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a 图标的下载地址, 还有一个付费的我免费额度用完了就忘了 -->\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <title>Index</title>\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("      body {\n");
      out.write("        background-image: url(\"./STATIC-RESOURCES/IMAGE/background/background.jpg\"); /* 设置背景图片路径 */\n");
      out.write("        background-position: center; /* 将背景图片在容器中居中 */\n");
      out.write("        background-repeat: no-repeat; /* 防止背景图片重复显示 */\n");
      out.write("        background-size: 100% 100%; /* 将背景图片拉伸以铺满容器 */\n");
      out.write("        background-attachment: fixed; /* 固定背景图片，不随页面滚动而滚动 */\n");
      out.write("        height: 100vh; /* 设置容器的高度为视口的高度 */\n");
      out.write("        margin: 0; /* 移除默认的边距 */\n");
      out.write("      }\n");
      out.write("      .container {\n");
      out.write("        display: flex; /* 使用 Flexbox 布局 */\n");
      out.write("        flex-direction: column; /* 垂直排列子元素 */\n");
      out.write("        justify-content: center; /* 水平居中子元素 */\n");
      out.write("        align-items: center; /* 垂直居中子元素 */\n");
      out.write("        height: 100vh; /* 设置容器的高度为视口的高度 */\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      #typing-text {\n");
      out.write("        font-family: 黑体, serif;\n");
      out.write("        font-size: 36px; /* 设置字体大小为 24 像素 */\n");
      out.write("        text-align: center; /* 文本水平居中对齐 */\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      #arrow {\n");
      out.write("        width: 40px; /* 设置宽度为 40 像素 */\n");
      out.write("        height: 40px; /* 设置高度为 40 像素 */\n");
      out.write("        background-image: url(\"./STATIC-RESOURCES/IMAGE/icon/arrow.svg\"); /* 使用指定的箭头图像作为背景 */\n");
      out.write("        background-size: cover; /* 自动缩放背景图像以覆盖整个元素 */\n");
      out.write("        margin-top: 20px; /* 在顶部留出 20 像素的空白 */\n");
      out.write("        cursor: pointer; /* 鼠标悬停时显示指针光标 */\n");
      out.write("        position: relative; /* 设置为相对定位, 这里是实现动画的关键 */\n");
      out.write("      }\n");
      out.write("    </style>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("      <h1 id=\"typing-text\"></h1>\n");
      out.write("      <!-- 用于显示打字效果的文本 -->\n");
      out.write("      <div id=\"arrow\"></div>\n");
      out.write("      <!-- 用于显示下拉箭头的元素 -->\n");
      out.write("    </div>\n");
      out.write("    <script src=\"./JS/index.js\"></script>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
