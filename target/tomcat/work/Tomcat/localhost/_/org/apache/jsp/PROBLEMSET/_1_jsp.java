/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2023-12-08 12:35:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.PROBLEMSET;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.util.*;
import Login_And_Register.CheckLogin;
import java.util.*;
import java.util.*;
import java.util.*;

public final class _1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1702036038760L));
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1702036038684L));
    _jspx_dependants.put("/PROBLEMSET/template_header.jsp", Long.valueOf(1702036038776L));
    _jspx_dependants.put("/PROBLEMSET/template_footer.jsp", Long.valueOf(1702036038776L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1702036038688L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  request.setCharacterEncoding("utf-8");
  response.setCharacterEncoding("utf-8");

  String loggedInUsername = (String) session.getAttribute("loggedInUsername");
  // å¦æéè¦ç»åºï¼ä» Session ä¸­å é¤ç¨æ·å
  String logout = request.getParameter("logout");
  if ("true".equals(logout)) {
    new CheckLogin().logoutUser(loggedInUsername);
    session.removeAttribute("loggedInUsername");
    response.sendRedirect("/home.jsp");
  }

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

  String ans = (String)request.getAttribute("ans");
  String roomID = (String)session.getAttribute("roomID");
  String currentURL = request.getRequestURL().toString();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\"/>\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n");
      out.write("  <title></title>\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"../CSS/navbar.css\"/>\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"../CSS/content.css\"/>\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"../CSS/footer.css\"/>\r\n");
      out.write("  <!-- 引入 CodeMirror 样式文件 5.63.1 -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../LIB/Code-Mirror/codemirror.min.css\">\r\n");
      out.write("  <!-- 引入 CodeMirror 主题 -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../LIB/Code-Mirror/dracula.min.css\">\r\n");
      out.write("  <!-- 引入 Katex -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/LIB/Katex/katex.min.css\">\r\n");
      out.write("  <!-- 引入 Bootstrap 样式文件 -->\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n");
      out.write("  <style>\r\n");
      out.write("      /* 替换为适当的字体 */\r\n");
      out.write("      .CodeMirror {\r\n");
      out.write("          font-family: Consolas, monospace;\r\n");
      out.write("          font-size: 24px; /* 可根据需要调整字体大小 */\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      span {\r\n");
      out.write("          font-size: 20px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .choose {\r\n");
      out.write("          background-color: #ffffff; /* 设置兴趣爱好下拉框的背景颜色为黑色 */\r\n");
      out.write("          color: #000000; /* 设置兴趣爱好下拉框的文字颜色为白色 */\r\n");
      out.write("          font-size: 18px; /* 设置兴趣爱好下拉框的文字大小为18像素 */\r\n");
      out.write("          border: 3px solid #000; /* 使用像素值加粗边框 */\r\n");
      out.write("          padding: 10px; /* 设置兴趣爱好下拉框的内边距为10像素 */\r\n");
      out.write("          width: 10%; /* 设置兴趣爱好下拉框宽度为父容器的50% */\r\n");
      out.write("          min-width: 120px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .title {\r\n");
      out.write("          font-weight: bold;\r\n");
      out.write("          font-family: 黑体, serif;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      option, .choose, .title {\r\n");
      out.write("          font-weight: bold;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .sublime_code {\r\n");
      out.write("          font-size: 24px;\r\n");
      out.write("          display: inline-block;\r\n");
      out.write("          padding: 10px 20px;\r\n");
      out.write("          border-radius: 20px;\r\n");
      out.write("          background-color: #b0acac;\r\n");
      out.write("          color: #020202;\r\n");
      out.write("          text-decoration: none;\r\n");
      out.write("          transition: background-color 0.3s;\r\n");
      out.write("          cursor: pointer;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .sublime_code:hover {\r\n");
      out.write("          background-color: #555555; /* Change the background color on hover */\r\n");
      out.write("          color: #ffffff;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      p {\r\n");
      out.write("          font-family: 微软雅黑, serif;\r\n");
      out.write("          margin: 0.5% auto;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      #problem_title {\r\n");
      out.write("          font-size:30px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      #problem_description {\r\n");
      out.write("          text-align: left;\r\n");
      out.write("          margin: 3% 8%;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .p_title {\r\n");
      out.write("          font-weight: bold;\r\n");
      out.write("          font-family: 黑体, serif;\r\n");
      out.write("          /*border: 3px solid black;*/\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      input {\r\n");
      out.write("          width: auto;\r\n");
      out.write("          border-width: 5px;\r\n");
      out.write("          font-size:18px;\r\n");
      out.write("          font-family: 黑体, serif;\r\n");
      out.write("      }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar\">\r\n");
      out.write("  <a href=\"javascript:location.reload()\">\r\n");
      out.write("    <img src=\"/STATIC-RESOURCES/IMAGE/icon/logo.png\" alt=\"按钮\" width=\"15%\"/>\r\n");
      out.write("  </a>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"navbar-links\">\r\n");
      out.write("    <a href=\"/home.jsp\">首页</a>\r\n");
      out.write("    <a href=\"/problemset.jsp\">题库</a>\r\n");
      out.write("    <a href=\"/item.jsp\">项目</a>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (loggedInUsername == null || loggedInUsername.isEmpty()) { 
      out.write("\r\n");
      out.write("    <a href=\"/login.jsp\">登录</a>\r\n");
      out.write("    <a href=\"/register.jsp\">注册</a>\r\n");
      out.write("    ");
 } else { 
      out.write("\r\n");
      out.write("    <a href=\"/ITEM/1.jsp\">\r\n");
      out.write("      ");
      out.print( loggedInUsername );
      out.write("\r\n");
      out.write("    </a>\r\n");
      out.write("    <a href=\"?logout=true\">登出</a>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Content Start -->\r\n");
      out.write("<div class=\"content\">");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- Problem Start -->\r\n");
      out.write("  ");
 session.setAttribute("problemId", "1");
      out.write("\r\n");
      out.write("  <br/>\r\n");
      out.write("  <p id=\"problem_title\">1.A+B Problem</p>\r\n");
      out.write("  <p id=\"time_limit\">time limit : 1s</p>\r\n");
      out.write("  <p id=\"memory_limit\">mermory limit : 256MB</p>\r\n");
      out.write("  <p id=\"input_method\">input : standard input</p>\r\n");
      out.write("  <p id=\"output_method\">output : standard output</p>\r\n");
      out.write("  <p id=\"problem_description\">\r\n");
      out.write("    <span class=\"p_title\">问题描述</span><br/>\r\n");
      out.write("    <span>计算 a + b 的和.</span><br/><br/>\r\n");
      out.write("\r\n");
      out.write("    <span class=\"p_title\">输入描述</span><br/>\r\n");
      out.write("    <span>输入两个整数.</span><br/><br/>\r\n");
      out.write("\r\n");
      out.write("    <span class=\"p_title\">输出描述</span><br/>\r\n");
      out.write("    <span>输出一个整数 a + b 的和</span><br/><br/>\r\n");
      out.write("\r\n");
      out.write("    <span class=\"p_title\">输入样例</span><br/>\r\n");
      out.write("    <span class=\"mb-3\">\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"CopyInput\" value=\"1 2\" readonly>\r\n");
      out.write("    </span><br/><br/>\r\n");
      out.write("\r\n");
      out.write("    <span class=\"p_title\">输出样例</span><br/>\r\n");
      out.write("    <span class=\"mb-3\">\r\n");
      out.write("      <input type=\"text\" class=\"form-control\" id=\"CopyOutput\" value=\"3\" readonly>\r\n");
      out.write("    </span><br/><br/>\r\n");
      out.write("\r\n");
      out.write("    <span class=\"p_title\">范围</span><br/>\r\n");
      out.write("    <span><span class=\"math-expression\">1\\leq a, b \\leq 10^9</span></span><br/><br/>\r\n");
      out.write("  </p>\r\n");
      out.write("  <!-- Problem End -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Editor Start -->\r\n");
      out.write("<!-- autocomplete 防止表单提交的时候重复显示 -->\r\n");
      out.write("<form id=\"codeForm\" action=\"/servlet/Judge_Code\" method=\"post\" autocomplete=\"off\">\r\n");
      out.write("  <div class=\"content\" style=\"min-height:auto\">\r\n");
      out.write("    <span class=\"title\" style=\"font-size:30px;position: absolute; left: 12%;\">代码编辑器</span>\r\n");
      out.write("    <span style=\"position: absolute; right:15%;\">\r\n");
      out.write("        <span class=\"title\">语言</span>\r\n");
      out.write("        <label>\r\n");
      out.write("          <select class=\"choose\" name=\"language\">\r\n");
      out.write("            <option value=\"text/x-c++src\">C++</option>\r\n");
      out.write("            <option value=\"text/x-java\">Java</option>\r\n");
      out.write("            <option value=\"python\">Python</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </label>\r\n");
      out.write("      </span>\r\n");
      out.write("    <span style=\"position: absolute; right:30%;\">\r\n");
      out.write("        <span class=\"title\">编辑模式</span>\r\n");
      out.write("        <label>\r\n");
      out.write("          <select class=\"choose\" name=\"mode\">\r\n");
      out.write("            <option value=\"default\">Text</option>\r\n");
      out.write("            <option value=\"vim\">Vim</option>\r\n");
      out.write("          </select>\r\n");
      out.write("        </label>\r\n");
      out.write("      </span>\r\n");
      out.write("    <br/><br/><br/>\r\n");
      out.write("    <div id=\"editor\" style=\"text-align: left;\"></div>\r\n");
      out.write("    <br/>\r\n");
      out.write("    <a href=\"#\" onclick=\"submitCode()\" class=\"sublime_code\">提交</a>\r\n");
      out.write("  </div>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- Editor End -->\r\n");
      out.write("</div>\r\n");
      out.write("<!-- Content End -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer class=\"site-footer\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <div class=\"footer-content\">\r\n");
      out.write("      <div class=\"footer-section\">\r\n");
      out.write("        <a>关于我们</a>\r\n");
      out.write("        <p>这里是一个项目和刷题展示的网站</p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</footer>");
      out.write('\r');
      out.write('\n');
 if(ans == null || ans.isEmpty()) ans = " "; 
      out.write('\r');
      out.write('\n');
 if (ans.equals("Please_login_first")) { 
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  window.onload = function () {\r\n");
      out.write("    setTimeout(function () {\r\n");
      out.write("      alert(\"不接受非注册用户的提交!\");\r\n");
      out.write("    }, 100);\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
 } else if (ans.equals("Please_enter_your_code")) { 
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  window.onload = function () {\r\n");
      out.write("    setTimeout(function () {\r\n");
      out.write("      alert(\"请输入你的代码!\");\r\n");
      out.write("    }, 100);\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");

} else if (ans.equals("Accepted")) { 
      out.write('\r');
      out.write('\n');

  if (roomID != null && !roomID.isEmpty()) {
      session.setAttribute("result", "2");
      response.sendRedirect("/servlet/Judge_Result");
  }

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  window.onload = function () {\r\n");
      out.write("    setTimeout(function () {\r\n");
      out.write("      alert(\"恭喜你, 通过了这道题!\");\r\n");
      out.write("    }, 100);\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
 } else if (ans.equals("Wrong_Answer")) { 
      out.write('\r');
      out.write('\n');

  if (roomID != null && !roomID.isEmpty()) {
    session.setAttribute("result", "1");
    response.sendRedirect("/servlet/Judge_Result");
  }

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  window.onload = function () {\r\n");
      out.write("    setTimeout(function () {\r\n");
      out.write("      alert(\"与标准答案不符!\");\r\n");
      out.write("    }, 100);\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
 } else if (ans.equals("Compilation_Error")) { 
      out.write('\r');
      out.write('\n');

  if (roomID != null && !roomID.isEmpty()) {
    session.setAttribute("result", "1");
    response.sendRedirect("/servlet/Judge_Result");
  }

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  window.onload = function () {\r\n");
      out.write("    setTimeout(function () {\r\n");
      out.write("      alert(\"编译错误!\");\r\n");
      out.write("    }, 100);\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
 } 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/codemirror.min.js\"></script>\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/clike.min.js\"></script>\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/matchbrackets.min.js\"></script>\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/closebrackets.min.js\"></script>\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/matchtags.min.js\"></script>\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/closetag.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/python.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"/LIB/Code-Mirror/vim.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"/JS/code-mirror.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"/LIB/Katex/katex.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("    const mathElements = document.getElementsByClassName(\"math-expression\");\r\n");
      out.write("    Array.from(mathElements).forEach(function (element) {\r\n");
      out.write("      katex.render(element.textContent, element, {\r\n");
      out.write("        throwOnError: false,\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
