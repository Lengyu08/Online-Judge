/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2023-12-09 04:22:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ITEM;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import Login_And_Register.CheckLogin;
import Manger.GetLevel;
import java.util.*;
import java.util.*;
import Manger.RootOpt;
import java.util.*;
import Manger.FeedBack;
import java.util.*;
import Manger.UserMailBox;
import java.util.*;

public final class _1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


  RootOpt rootOpt = new RootOpt();


  FeedBack feedBack = new FeedBack();


  UserMailBox mail_box = new UserMailBox();

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/navbar.jsp", Long.valueOf(1702036038760L));
    _jspx_dependants.put("/ITEM/./1.Manger/2.user.jsp", Long.valueOf(1702095231439L));
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1702036038684L));
    _jspx_dependants.put("/ITEM/./1.Manger/0.root.jsp", Long.valueOf(1702036038692L));
    _jspx_dependants.put("/ITEM/./1.Manger/1.adminer.jsp", Long.valueOf(1702095223603L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1702036038688L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  request.setCharacterEncoding("utf-8");
  response.setCharacterEncoding("utf-8");

  String loggedInUsername = (String) session.getAttribute("loggedInUsername");
  // å¦æéè¦ç»åºï¼ä» Session ä¸­å é¤ç¨æ·å
  String logout = request.getParameter("logout");
  if ("true".equals(logout)) {
    new CheckLogin().logoutUser(loggedInUsername);
    session.removeAttribute("loggedInUsername");
    response.sendRedirect("/home.jsp");
  }

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  if (loggedInUsername == null || loggedInUsername.isEmpty() || new GetLevel().getLevel(loggedInUsername) < 0) {
    session.setAttribute("Error", "ChatLoginError");
    response.sendRedirect("../item.jsp");
  }
  int right_leve = new GetLevel().getLevel(loggedInUsername);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\"/>\r\n");
      out.write("  <title>Chat</title>\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"../CSS/navbar.css\"/>\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"../CSS/content.css\"/>\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"../CSS/footer.css\"/>\r\n");
      out.write("\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"/LIB/Bootstrap/bootstrap.min.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar\">\r\n");
      out.write("  <a href=\"javascript:location.reload()\">\r\n");
      out.write("    <img src=\"/STATIC-RESOURCES/IMAGE/icon/logo.png\" alt=\"按钮\" width=\"15%\"/>\r\n");
      out.write("  </a>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"navbar-links\">\r\n");
      out.write("    <a href=\"/home.jsp\">首页</a>\r\n");
      out.write("    <a href=\"/problemset.jsp\">题库</a>\r\n");
      out.write("    <a href=\"/item.jsp\">项目</a>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (loggedInUsername == null || loggedInUsername.isEmpty()) { 
      out.write("\r\n");
      out.write("    <a href=\"/login.jsp\">登录</a>\r\n");
      out.write("    <a href=\"/register.jsp\">注册</a>\r\n");
      out.write("    ");
 } else { 
      out.write("\r\n");
      out.write("    <a href=\"/ITEM/1.jsp\">\r\n");
      out.write("      ");
      out.print( loggedInUsername );
      out.write("\r\n");
      out.write("    </a>\r\n");
      out.write("    <a href=\"?logout=true\">登出</a>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\r\n");
 if (right_leve == 0) { 
      out.write("\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  String username = request.getParameter("username");
  String password = request.getParameter("password");
  String permission = request.getParameter("permission");
  String opt = request.getParameter("opt");
  int right_level = -1;
  if (Objects.equals(permission, "0")) right_level = 0;
  else if (Objects.equals(permission, "1")) right_level = 1;
  else if (Objects.equals(permission, "2")) right_level = 2;
  if (Objects.equals(opt, "add_user")) {
    rootOpt.addUser(username, password, right_level);
  } else if (Objects.equals(opt, "modify_user")) {
    rootOpt.modifyUser(username, password, right_level);
  } else if (Objects.equals(opt, "delete_user")) {
    rootOpt.deleteUser(username);
  }
  rootOpt.queryUserList();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-5\">\r\n");
      out.write("  <h2 style=\"margin-right:100px;font-weight: bolder; \">用户列表</h2>\r\n");
      out.write("  <br/><br/>\r\n");
      out.write("  <table class=\"table\">\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\">用户编号</th>\r\n");
      out.write("      <th scope=\"col\">姓名</th>\r\n");
      out.write("      <th scope=\"col\">密码</th>\r\n");
      out.write("      <th scope=\"col\">权限等级</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    <!-- User Data -->\r\n");
      out.write("    ");
 for (int i = 0; i < new RootOpt().getUserListSize(); i++) { 
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"row\">");
      out.print(new RootOpt().getUserId(i));
      out.write("</th>\r\n");
      out.write("      <td>");
      out.print(new RootOpt().getUserName(i));
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(new RootOpt().getUserPassword(i));
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(new RootOpt().getUserLevel(i));
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("</div>\r\n");
      out.write("<br/><br/><br/>\r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group\">\r\n");
      out.write("  <span class=\"input-group-text\">用户名</span>\r\n");
      out.write("  <input type=\"text\" aria-label=\"username\" class=\"form-control\" id=\"usernameInput\" name=\"username\">\r\n");
      out.write("\r\n");
      out.write("  <span class=\"input-group-text\">密码</span>\r\n");
      out.write("  <input type=\"password\" aria-label=\"password\" class=\"form-control\" id=\"passwordInput\" name=\"password\">\r\n");
      out.write("\r\n");
      out.write("  <span class=\"input-group-text\">权限</span>\r\n");
      out.write("  <select class=\"form-select\" aria-label=\"Default select example\" id=\"permissionSelect\" name=\"right_level\">\r\n");
      out.write("    <option selected disabled hidden>选择用户的权限</option>\r\n");
      out.write("    <option value=\"0\">超级用户</option>\r\n");
      out.write("    <option value=\"1\">管理员</option>\r\n");
      out.write("    <option value=\"2\">普通用户</option>\r\n");
      out.write("  </select>\r\n");
      out.write("\r\n");
      out.write("  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"add_user()\">添加用户</button>\r\n");
      out.write("  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"modify_user()\">修改用户</button>\r\n");
      out.write("  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"delete_user()\">删除用户</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Add your JavaScript script -->\r\n");
      out.write("<script>\r\n");
      out.write("  function add_user() {\r\n");
      out.write("    let username = document.getElementById('usernameInput').value;\r\n");
      out.write("    let password = document.getElementById('passwordInput').value;\r\n");
      out.write("    let permission = document.getElementById('permissionSelect').value;\r\n");
      out.write("    let opt = \"add_user\";\r\n");
      out.write("    sublime_message(username, password, permission, opt);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function modify_user() {\r\n");
      out.write("    let username = document.getElementById('usernameInput').value;\r\n");
      out.write("    let password = document.getElementById('passwordInput').value;\r\n");
      out.write("    let permission = document.getElementById('permissionSelect').value;\r\n");
      out.write("    let opt = \"modify_user\";\r\n");
      out.write("    sublime_message(username, password, permission, opt);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function delete_user() {\r\n");
      out.write("    // Add your login logic here\r\n");
      out.write("    let username = document.getElementById('usernameInput').value;\r\n");
      out.write("    let opt = \"delete_user\";\r\n");
      out.write("    sublime_message(username, \"\", \"\", opt);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function sublime_message(username, password, permission, opt) {\r\n");
      out.write("    // Create a form element\r\n");
      out.write("    let form = document.createElement('form');\r\n");
      out.write("    form.method = 'post'; // Use 'post' method to send sensitive data like passwords\r\n");
      out.write("    form.action = '/ITEM/1.jsp';     // Set the action attribute to the current JSP page URL\r\n");
      out.write("\r\n");
      out.write("    // Create input elements for each parameter\r\n");
      out.write("    let usernameInput = document.createElement('input');\r\n");
      out.write("    usernameInput.type = 'hidden';\r\n");
      out.write("    usernameInput.name = 'username';\r\n");
      out.write("    usernameInput.value = username;\r\n");
      out.write("    form.appendChild(usernameInput);\r\n");
      out.write("\r\n");
      out.write("    let passwordInput = document.createElement('input');\r\n");
      out.write("    passwordInput.type = 'hidden';\r\n");
      out.write("    passwordInput.name = 'password';\r\n");
      out.write("    passwordInput.value = password;\r\n");
      out.write("    form.appendChild(passwordInput);\r\n");
      out.write("\r\n");
      out.write("    let permissionInput = document.createElement('input');\r\n");
      out.write("    permissionInput.type = 'hidden';\r\n");
      out.write("    permissionInput.name = 'permission';\r\n");
      out.write("    permissionInput.value = permission;\r\n");
      out.write("    form.appendChild(permissionInput);\r\n");
      out.write("\r\n");
      out.write("    let optInput = document.createElement('input');\r\n");
      out.write("    optInput.type = 'hidden';\r\n");
      out.write("    optInput.name = 'opt';\r\n");
      out.write("    optInput.value = opt;\r\n");
      out.write("    form.appendChild(optInput);\r\n");
      out.write("\r\n");
      out.write("    // Append the form to the document body\r\n");
      out.write("    document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("    // Submit the form\r\n");
      out.write("    form.submit();\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write('\r');
      out.write('\n');
 } else if (right_leve == 1) { 
      out.write("\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  String email_id = request.getParameter("email_id");
  String replay_email = request.getParameter("replay_email");
  String opt = request.getParameter("opt");
  System.out.println("email_id: " + email_id + " replay: " + replay_email + " " + opt);
  if (opt != null && !opt.isEmpty()) {
    if (opt.equals("replay")) {
      feedBack.refer_to_user(Integer.parseInt(email_id), loggedInUsername, replay_email);
    } else if (opt.equals("delete")) {
        System.out.println("进入删除界面");
      feedBack.delete_mail(Integer.parseInt(email_id));
    }
  }
  feedBack.queryList();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-5\">\r\n");
      out.write("  <h2 style=\"margin-right:100px;font-weight: bolder; \">用户列表</h2>\r\n");
      out.write("  <br/><br/>\r\n");
      out.write("  <table class=\"table\">\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\">ID</th>\r\n");
      out.write("      <th scope=\"col\">反馈用户</th>\r\n");
      out.write("      <th scope=\"col\">反馈类型</th>\r\n");
      out.write("      <th scope=\"col\">反馈内容</th>\r\n");
      out.write("      <th scope=\"col\">反馈时间</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    ");
 for (int i = 0; i < feedBack.getMessageListSize(); i++) { 
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"row\">");
      out.print(feedBack.getMessageId(i));
      out.write("</th>\r\n");
      out.write("      <td>");
      out.print(feedBack.getMessageUsername(i));
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(feedBack.getMessageType(i));
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(feedBack.getMessageEmail(i));
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(feedBack.getMessageTime(i));
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("</div>\r\n");
      out.write("<br/><br/><br/>\r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group\">\r\n");
      out.write("  <span class=\"input-group-text\">ID</span>\r\n");
      out.write("  <input type=\"text\" aria-label=\"username\" class=\"form-control\" id=\"email_id\" name=\"email_id\">\r\n");
      out.write("\r\n");
      out.write("  <span class=\"input-group-text\">回复意见</span>\r\n");
      out.write("  <input type=\"text\" aria-label=\"password\" class=\"form-control\" id=\"replay_email\" name=\"replay_email\">\r\n");
      out.write("\r\n");
      out.write("  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"replay_mail()\">回复意见</button>\r\n");
      out.write("  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"delete_mail()\">删除信件</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  function replay_mail() {\r\n");
      out.write("    let email_id = document.getElementById(\"email_id\").value;\r\n");
      out.write("    let replay_email = document.getElementById(\"replay_email\").value;\r\n");
      out.write("    let opt = \"replay\";\r\n");
      out.write("    handleMessage(email_id, replay_email, opt);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function delete_mail() {\r\n");
      out.write("    let email_id = document.getElementById(\"email_id\").value;\r\n");
      out.write("    let opt = \"delete\";\r\n");
      out.write("    handleMessage(email_id, \"\", opt);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function handleMessage(email_id, replay_email, opt) {\r\n");
      out.write("    // Create a form element\r\n");
      out.write("    let form = document.createElement('form');\r\n");
      out.write("    form.method = 'post';\r\n");
      out.write("    form.action = '/ITEM/1.jsp';     // Set the action attribute to the current JSP page URL\r\n");
      out.write("\r\n");
      out.write("    let emailIDInput = document.createElement('input');\r\n");
      out.write("    emailIDInput.type = 'hidden';\r\n");
      out.write("    emailIDInput.name = 'email_id';\r\n");
      out.write("    emailIDInput.value = email_id;\r\n");
      out.write("    form.appendChild(emailIDInput);\r\n");
      out.write("\r\n");
      out.write("    let replayInput = document.createElement('input');\r\n");
      out.write("    replayInput.type = 'hidden';\r\n");
      out.write("    replayInput.name = 'replay_email';\r\n");
      out.write("    replayInput.value = replay_email;\r\n");
      out.write("    form.appendChild(replayInput);\r\n");
      out.write("\r\n");
      out.write("    let optInput = document.createElement('input');\r\n");
      out.write("    optInput.type = 'hidden';\r\n");
      out.write("    optInput.name = 'opt';\r\n");
      out.write("    optInput.value = opt;\r\n");
      out.write("    form.appendChild(optInput);\r\n");
      out.write("\r\n");
      out.write("    // Append the form to the document body\r\n");
      out.write("    document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("    // Submit the form\r\n");
      out.write("    form.submit();\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
 } else if (right_leve == 2) { 
      out.write("\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  String question = request.getParameter("question");
  String question_type = request.getParameter("question_type");
  String opt = request.getParameter("opt");
  System.out.println("question: " + question + " question_type: " + question_type + " opt: " + opt);
  if (opt != null && !opt.isEmpty()) {
    if (opt.equals("raise_question")) {
      mail_box.raiseQuestion(loggedInUsername, question_type, question);
    } else if (opt.equals("clear_mail")) {
      mail_box.clearMail(loggedInUsername);
    }
  }
  mail_box.queryList(loggedInUsername);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-5\">\r\n");
      out.write("  <h2 style=\"margin-right:100px;font-weight: bolder; \">用户列表</h2>\r\n");
      out.write("  <br/><br/>\r\n");
      out.write("  <table class=\"table\">\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\">处理人</th>\r\n");
      out.write("      <th scope=\"col\">回复内容</th>\r\n");
      out.write("      <th scope=\"col\">处理时间</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    ");
 for (int i = 0; i < mail_box.getMessageListSize(); i ++) { 
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"row\">");
      out.print(mail_box.getMessageAdminName(i));
      out.write("</th>\r\n");
      out.write("      <td>");
      out.print(mail_box.getMessageContent(i));
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(mail_box.getMessageTime(i));
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("</div>\r\n");
      out.write("<br/><br/><br/>\r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group\">\r\n");
      out.write("  <span class=\"input-group-text\">提出问题</span>\r\n");
      out.write("  <input type=\"text\" aria-label=\"password\" class=\"form-control\" id=\"question\" name=\"question\">\r\n");
      out.write("  <select class=\"form-select\" aria-label=\"Default select example\" id=\"questionType\" name=\"questionType\">\r\n");
      out.write("    <option selected disabled hidden>选择问题的类型</option>\r\n");
      out.write("    <option value=\"problem_set\">题目问题</option>\r\n");
      out.write("    <option value=\"item\">项目问题</option>\r\n");
      out.write("    <option value=\"other\">其他</option>\r\n");
      out.write("  </select>\r\n");
      out.write("  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"raise_question()\">提出问题</button>\r\n");
      out.write("  <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"clear_mail()\">清空邮箱</button>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  function raise_question() {\r\n");
      out.write("    let question = document.getElementById(\"question\").value;\r\n");
      out.write("    let question_type = document.getElementById(\"questionType\").value;\r\n");
      out.write("    let opt = \"raise_question\";\r\n");
      out.write("    sublime_handle(question, question_type, opt);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function clear_mail() {\r\n");
      out.write("    let opt = \"clear_mail\";\r\n");
      out.write("    sublime_handle(\"\", \"\", opt);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function sublime_handle(question, question_type, opt) {\r\n");
      out.write("    // Create a form element\r\n");
      out.write("    let form = document.createElement('form');\r\n");
      out.write("    form.method = 'post';\r\n");
      out.write("    form.action = '/ITEM/1.jsp';     // Set the action attribute to the current JSP page URL\r\n");
      out.write("\r\n");
      out.write("    let questionInput = document.createElement('input');\r\n");
      out.write("    questionInput.type = 'hidden';\r\n");
      out.write("    questionInput.name = 'question';\r\n");
      out.write("    questionInput.value = question;\r\n");
      out.write("    form.appendChild(questionInput);\r\n");
      out.write("\r\n");
      out.write("    let questionType = document.createElement('input');\r\n");
      out.write("    questionType.type = 'hidden';\r\n");
      out.write("    questionType.name = 'question_type';\r\n");
      out.write("    questionType.value = question_type;\r\n");
      out.write("    form.appendChild(questionType);\r\n");
      out.write("\r\n");
      out.write("    let optInput = document.createElement('input');\r\n");
      out.write("    optInput.type = 'hidden';\r\n");
      out.write("    optInput.name = 'opt';\r\n");
      out.write("    optInput.value = opt;\r\n");
      out.write("    form.appendChild(optInput);\r\n");
      out.write("\r\n");
      out.write("    // Append the form to the document body\r\n");
      out.write("    document.body.appendChild(form);\r\n");
      out.write("\r\n");
      out.write("    // Submit the form\r\n");
      out.write("    form.submit();\r\n");
      out.write("\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write('\r');
      out.write('\n');
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer class=\"site-footer\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <div class=\"footer-content\">\r\n");
      out.write("      <div class=\"footer-section\">\r\n");
      out.write("        <a>关于我们</a>\r\n");
      out.write("        <p>这里是一个项目和刷题展示的网站</p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
